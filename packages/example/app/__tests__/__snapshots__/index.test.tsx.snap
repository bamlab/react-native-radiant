// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home should render the Home component correctly 1`] = `
<RCTScrollView>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderBottomWidth": 1,
          "borderColor": "#00000033",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "padding": 16,
        }
      }
    >
      <Text
        style={
          {
            "fontSize": 16,
          }
        }
      >
        Test
      </Text>
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "black",
              "fontSize": 16,
            },
            undefined,
            {
              "fontFamily": "ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderBottomWidth": 1,
          "borderColor": "#00000033",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "padding": 16,
        }
      }
    >
      <Text
        style={
          {
            "fontSize": 16,
          }
        }
      >
        Test
      </Text>
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "black",
              "fontSize": 16,
            },
            undefined,
            {
              "fontFamily": "ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderBottomWidth": 1,
          "borderColor": "#00000033",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "padding": 16,
        }
      }
    >
      <Text
        style={
          {
            "fontSize": 16,
          }
        }
      >
        Test
      </Text>
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "black",
              "fontSize": 16,
            },
            undefined,
            {
              "fontFamily": "ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</RCTScrollView>
`;
